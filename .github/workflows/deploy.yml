name: 🚀 Deploy

on:
  push:
    branches:
      - main
      - dev
  pull_request:

permissions:
  actions: write
  contents: read

jobs:
  prepare:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - name: ⎔ Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        id: pnpm-install
        uses: pnpm/action-setup@v4.0.0
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm i --frozen-lockfile
      
       - name: 🐳 Docker compose
        run: docker compose up -d && sleep 3
        env:
          DATABASE_URL: "postgresql://postgres:pass@localhost:5432/postgres"


  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [prepare]
    # only deploy main/dev branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4

      - name: 👀 Read app name
        uses: SebRollen/toml-action@v1.2.0
        id: app_name
        with:
          file: fly.toml
          field: app

      - name: 🎈 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@v2

      - name: 🚀 Deploy Staging
        if: ${{ github.ref == 'refs/heads/dev' }}
        run: flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}-staging
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🚀 Deploy Production
        if: ${{ github.ref == 'refs/heads/main' }}
        run: flyctl deploy --remote-only --build-arg COMMIT_SHA=${{ github.sha }} --app ${{ steps.app_name.outputs.value }}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
